-- File auto generated by purescript-bridge! --
module App where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Data.Tuple (Tuple)
import Prim (Array, Int)
import Room (Room)
import User (User)

import Prelude
import Data.Generic (class Generic)

newtype App =
    App {
      _rooms :: Array (Tuple Int Room)
    , _users :: Array (Tuple Int User)
    }

derive instance genericApp :: Generic App

derive instance newtypeApp :: Newtype App _


--------------------------------------------------------------------------------
_App :: Iso' App { _rooms :: Array (Tuple Int Room), _users :: Array (Tuple Int User)}
_App = _Newtype

rooms :: Lens' App (Array (Tuple Int Room))
rooms = _Newtype <<< prop (SProxy :: SProxy "_rooms")

users :: Lens' App (Array (Tuple Int User))
users = _Newtype <<< prop (SProxy :: SProxy "_users")

--------------------------------------------------------------------------------
