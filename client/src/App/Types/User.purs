-- File auto generated by purescript-bridge! --
module User where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Int, String)

import Prelude
import Data.Generic (class Generic)

newtype User =
    User {
      _userId :: Int
    , _userName :: String
    }

derive instance genericUser :: Generic User

derive instance newtypeUser :: Newtype User _


--------------------------------------------------------------------------------
_User :: Iso' User { _userId :: Int, _userName :: String}
_User = _Newtype

userId :: Lens' User Int
userId = _Newtype <<< prop (SProxy :: SProxy "_userId")

userName :: Lens' User String
userName = _Newtype <<< prop (SProxy :: SProxy "_userName")

--------------------------------------------------------------------------------
